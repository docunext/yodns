#!/usr/bin/env ruby

begin
  require 'rubygems'
rescue LoadError
  #
end
require 'lib/yodns'
require 'trollop'
require 'terminal-table/import'

SUB_COMMANDS = %w(zones list records add show export)
global_opts = Trollop::options do
  banner "Zonefile management tool"
  opt :dry_run, "Don't actually do anything", :short => "-n"
  opt :verbose, "Increase verbosity", :short => "-v"
  stop_on SUB_COMMANDS
end

# yodns add yodnsconf.com www www-c.evenserver.com.
# yodns list --record=txt yodnsconf.com

cmd = ARGV.shift # get the subcommand
case cmd
  when "zones"
    #
  when "list" || "records"
    cmd_opts = Trollop::options do
      opt :type, "Record type", :default => 'a', :short => '-t'
    end
    zone = YoDns.load_zone(ARGV.shift)
    rr = zone.send(cmd_opts[:type].to_sym)
    zone.report(rr)

  when "add"
    cmd_opts = Trollop::options do
      opt :ttl, "Time-to-live", :default => 14400, :short => '-t'
      opt :save, "Save"
    end
    zone = YoDns.load_zone(ARGV.shift)
    zone.add_record(ARGV[0], { :class => 'IN', :name => ARGV[1], :host => ARGV[2], :ttl => cmd_opts[:ttl] })  
    rr = zone.send(ARGV[0].to_sym)
    puts zone.output if global_opts.verbosity
    zone.report(rr)

  when "show"
    zone = YoDns.load_zone(ARGV.shift)
    puts zone.output

  when "export"
    #
  else
    Trollop::die "unknown subcommand #{cmd.inspect}"
  end



if global_opts.verbosity
  puts "Global options: #{global_opts.inspect}"
  puts "Subcommand: #{cmd.inspect}"
  puts "Subcommand options: #{cmd_opts.inspect}"
  puts "Remaining arguments: #{ARGV.inspect}"
end
